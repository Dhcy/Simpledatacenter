<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.good.plat.datacenter.login.user.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.good.plat.datacenter.login.user.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="logindate" property="logindate" jdbcType="TIMESTAMP" />
    <result column="vocation" property="vocation" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, realname, username, password, phone, createdate, logindate, vocation
  </sql>
  
  <insert id="insert" parameterType="com.good.plat.datacenter.login.user.entity.User" >
    insert into tb_logplat_user (id, realname, username, 
      password, phone, createdate, 
      logindate, vocation)
    values (#{id,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, 
      #{logindate,jdbcType=TIMESTAMP}, #{vocation,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" 
  	parameterType="com.good.plat.datacenter.login.user.entity.User" >
    insert into tb_logplat_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="logindate != null" >
        logindate,
      </if>
      <if test="vocation != null" >
        vocation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="logindate != null" >
        #{logindate,jdbcType=TIMESTAMP},
      </if>
      <if test="vocation != null" >
        #{vocation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <insert id="insertUserRole" parameterType="com.good.plat.datacenter.login.user.entity.User">
  	insert into tb_logplat_user_role (userid, roleid) values
  	<foreach collection="roleList" item="role" separator="," index="index">
  		(#{id,jdbcType=INTEGER}, #{role.id,jdbcType=INTEGER})
  	</foreach>
  </insert>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_logplat_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteUserRole" parameterType="com.good.plat.datacenter.login.user.entity.User">
  	delete from tb_logplat_user_role where userid = #{id,jdbcType=INTEGER}
  </delete>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_logplat_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectUserByUser" resultMap="BaseResultMap" 
  	parameterType="com.good.plat.datacenter.login.user.entity.User" >
    select 
    <include refid="Base_Column_List" />
    from tb_logplat_user
    where 1=1 
    <if test="id != null and id != -1" >
       	and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="realname != null" >
       	and realname = #{realname,jdbcType=VARCHAR}
    </if>
    <if test="username != null" >
    	and username = #{username,jdbcType=VARCHAR}
    </if>
  </select>
  
  
  <resultMap id="UserList" type="com.good.plat.datacenter.login.user.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="logindate" property="logindate" jdbcType="TIMESTAMP" />
    <result column="vocation" property="vocation" jdbcType="VARCHAR" />
    <result column="rolename" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectUserListByUser" resultMap="UserList"
  	parameterType="com.good.plat.datacenter.login.user.entity.User" >
  	select 
  		u.id as id, 
  		u.realname as realname, 
  		u.username as username, 
  		u.phone as phone, 
  		u.createdate as createdate,
  		u.logindate as logindate, 
  		u.vocation as vocation, 
  		group_concat(r.rolename order by r.id) rolename
	from 
		tb_logplat_user u left join 
		tb_logplat_user_role ur on u.id=ur.userid
		left join tb_logplat_role r on r.id=ur.roleid 
	where 1=1
	<if test="username != null">
		and username=#{username}
	</if>
	
	<if test="realname != null">
		and realname=#{realname}
	</if>
	
	<if test="roleId != null and roleId != -1">
		and u.id in (select userid from 
		tb_logplat_user_role where 
		roleid=#{roleId,jdbcType=INTEGER})
	</if>
	group by u.id 
	order by u.id
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.good.plat.datacenter.login.user.entity.User" >
    update tb_logplat_user
    <set >
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="logindate != null" >
        logindate = #{logindate,jdbcType=TIMESTAMP},
      </if>
      <if test="vocation != null" >
        vocation = #{vocation,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.good.plat.datacenter.login.user.entity.User" >
    update tb_logplat_user
    set realname = #{realname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      logindate = #{logindate,jdbcType=TIMESTAMP},
      vocation = #{vocation,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <resultMap id="UpdateUserUI" type="com.good.plat.datacenter.login.user.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="vocation" property="vocation" jdbcType="VARCHAR" />
    <collection property="roleList" ofType="com.good.plat.datacenter.login.user.entity.Role">
   		<id column="roleid" property="id"/>
   		<result column="rolename" property="rolename"/>
    </collection>
  </resultMap>
  
  <select id="updateUserUI" resultMap="UpdateUserUI"
  	parameterType="com.good.plat.datacenter.login.user.entity.User" >
  	select 
		u.id as userid, 
		u.username as username, 
		u.realname as realname, 
		u.phone as phone, 
		u.vocation as vocation, 
		r.id as roleid, 
		r.rolename as rolename 
	from 
		tb_logplat_user u left join tb_logplat_user_role ur on u.id=ur.userid
		left join tb_logplat_role r on r.id=ur.roleid
	where 
		u.id=#{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteUserResource" 
  	parameterType="com.good.plat.datacenter.login.user.entity.UserResource">
  	delete from tb_logplat_user_resource where userid=#{userid}
  </delete>
  
  <resultMap type="com.good.plat.datacenter.login.user.entity.UserResource" id="UserResourceUI">
  	<result column="userid" property="userid"/>
  	<result column="restype" property="restype"/>
  	<result column="relationid" property="relationid"/>
  </resultMap>
  <select id="updateUserResourceUI" resultMap="UserResourceUI"
  	parameterType="com.good.plat.datacenter.login.user.entity.User">
  	select userid, restype, relationid from tb_logplat_user_resource where userid=#{id}
  </select>
  
  <insert id="updateUserResource" parameterType="com.good.plat.datacenter.login.user.entity.User">
  	insert into tb_logplat_user_resource(userid, restype, relationid) values 
  	<foreach collection="resourceList" item="re" separator="," index="index">
  		(#{re.userid}, #{re.restype}, #{re.relationid})
  	</foreach>
  </insert>

</mapper>