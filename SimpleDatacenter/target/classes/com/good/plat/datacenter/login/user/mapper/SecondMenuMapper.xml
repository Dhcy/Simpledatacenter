<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.good.plat.datacenter.login.user.mapper.SecondMenuMapper" >
  <resultMap id="BaseResultMap" type="com.good.plat.datacenter.login.user.entity.SecondMenu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="firstId" property="firstId" jdbcType="INTEGER" />
    <result column="secondKey" property="key" jdbcType="VARCHAR" />
    <result column="secondName" property="name" jdbcType="VARCHAR" />
    <result column="actkey" property="actkey" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="type" property="menuType" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.good.plat.datacenter.login.user.entity.SecondMenu" id="MenuList">
  	<id column="menu2_id" property="id" jdbcType="INTEGER" />
    <result column="menu2_firstId" property="firstId" jdbcType="INTEGER" />
    <result column="menu2_key" property="key" jdbcType="VARCHAR" />
    <result column="menu2_name" property="name" jdbcType="VARCHAR" />
    <result column="menu2_actkey" property="actkey" jdbcType="VARCHAR" />
    <result column="menu2_url" property="url" jdbcType="VARCHAR" />
    <result column="menu2_permission" property="permission" jdbcType="VARCHAR" />
    <result column="menu2_type" property="menuType" jdbcType="INTEGER" />
    <association property="firstMenu" javaType="com.good.plat.datacenter.login.user.entity.FirstMenu">
    	<id column="menu1_id" property="id"/>
    	<result column="menu1_key" property="key"/>
    	<result column="menu1_name" property="name"/>
    	<result column="plat_id" property="platid"/>
    </association>
  </resultMap>
  
  <resultMap type="com.good.plat.datacenter.login.user.entity.SecondMenu" id="UserMenuList">
  	<id column="menu2_id" property="id" jdbcType="INTEGER" />
    <result column="menu2_firstId" property="firstId" jdbcType="INTEGER" />
    <result column="menu2_key" property="key" jdbcType="VARCHAR" />
    <result column="menu2_name" property="name" jdbcType="VARCHAR" />
    <result column="menu2_actkey" property="actkey" jdbcType="VARCHAR" />
    <result column="menu2_url" property="url" jdbcType="VARCHAR" />
    <result column="menu2_permission" property="permission" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectSecondMenuListByUser" resultMap="UserMenuList" 
  	parameterType="java.lang.Integer">
  	select
		distinct(menu2.id) as menu2_id,
		menu2.firstId as menu2_firstId,
		menu2.secondKey as menu2_key,
		menu2.secondName as menu2_name,
		menu2.actkey as menu2_actkey,
		menu2.url as menu2_url,
		menu2.permission as menu2_permission
	from 
		tb_logplat_role role, 
		tb_logplat_role_permission per, 
		tb_logplat_second_menu menu2
	where 
		role.id=per.roleid
		and per.menuid = menu2.id 
		<if test="userid != null">
			and role.id in (select roleid from tb_logplat_user_role where userid=1)
		</if>
		order by menu2.id
  
  
  </select>
  
  <sql id="Base_Column_List" >
    id, firstId, secondKey, secondName, actkey, url, permission,type 
  </sql>
  
  <select id="selectPermission" resultMap="BaseResultMap"
  	parameterType="com.good.plat.datacenter.login.user.entity.SecondMenu">
  	select 
  	<include refid="Base_Column_List"/>
  	from tb_logplat_second_menu where 1=1
  	<if test="name != null and name != ''">
  		and secondName=#{name,jdbcType=VARCHAR}
  	</if>
  	order by id
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_logplat_second_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectBySecondMenu" resultMap="BaseResultMap" 
  	parameterType="com.good.plat.datacenter.login.user.entity.FirstMenu">
  	select 
    <include refid="Base_Column_List" />
    from tb_logplat_second_menu
    <where>
    	<if test="id != null">
    		id = #{id,jdbcType=INTEGER}
    	</if>
    	<if test="key != null">
    		and secondKey = #{key}
    	</if>
    	<if test="name != null">
    		and secondName = #{name}
    	</if>
    </where>
  </select>
  
  <select id="selectSecondMenuList" resultMap="MenuList"
  	parameterType="com.good.plat.datacenter.login.user.entity.SecondMenu">
  	select
  		menu2.id as menu2_id,
  		menu2.firstId as menu2_firstId,
		menu2.secondKey as menu2_key,
		menu2.secondName as menu2_name,
		menu2.actkey as menu2_actkey,
		menu2.url as menu2_url,
		menu2.permission as menu2_permission,
		menu2.type as menu2_type,
		menu1.id as menu1_id, 
		menu1.firstKey as menu1_key, 
		menu1.firstName as menu1_name,
		plat.id as plat_id
	from 
		tb_logplat_second_menu menu2, 
		tb_logplat_first_menu menu1,
		tb_logplat_sys_plat plat
	where menu2.firstId = menu1.id
	and  plat.id=menu1.platid
	<if test="firstId != null and firstId != -1">
		and menu2.firstId = #{firstId}
	</if>
	order by menu2.id
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_logplat_second_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  <insert id="insert" parameterType="com.good.plat.datacenter.login.user.entity.SecondMenu" >
    insert into tb_logplat_second_menu (id, firstId, secondKey, 
      secondName, actkey, url, 
      permission)
    values (#{id,jdbcType=INTEGER}, #{firstId,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{actkey,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{permission,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.good.plat.datacenter.login.user.entity.SecondMenu" >
    insert into tb_logplat_second_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="firstId != null" >
        firstId,
      </if>
      <if test="key != null" >
        secondKey,
      </if>
      <if test="name != null" >
        secondName,
      </if>
      <if test="actkey != null" >
        actkey,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="menuType != null">
      	type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firstId != null" >
        #{firstId,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="actkey != null" >
        #{actkey,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null" >
        #{menuType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.good.plat.datacenter.login.user.entity.SecondMenu" >
    update tb_logplat_second_menu
    <set >
      <if test="firstId != null" >
        firstId = #{firstId,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        secondKey = #{key,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        secondName = #{name,jdbcType=VARCHAR},
      </if>
      <if test="actkey != null" >
        actkey = #{actkey,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null" >
        type = #{menuType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.good.plat.datacenter.login.user.entity.SecondMenu" >
    update tb_logplat_second_menu
    set firstId = #{firstId,jdbcType=INTEGER},
      secondKey = #{key,jdbcType=VARCHAR},
      secondName = #{name,jdbcType=VARCHAR},
      actkey = #{actkey,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>